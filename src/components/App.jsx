// Autogenerated using npm run gen App
/*
 * Copy to other files
 * import App from './App';
 * <App/>
 */
import Error404 from './Error404';
import Header from './Header';
import Stats from './Stats';
import MatrixActions from './MatrixActions';
import styled from 'styled-components';
import Footer from './Footer';
// import PropTypes from 'prop-types';
import { Switch, Route } from 'react-router-dom';

const defaultCyberdeckData = require('../test_data/cyberdecks.json');
const defaultMatrixActions = require('../data/matrixActions.json');

class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      cyberdeckDataMaster: defaultCyberdeckData,
      matrixActions: defaultMatrixActions,
    };
    this.onHandleConfigStats = this.onHandleConfigStats.bind(this);
    // this.onHandleConfigSkills = this.onHandleConfigSkills.bind(this);
  }

  onHandleConfigStats(name, value) {
    console.log(name + ' | ' + value);
    this.setState((state) => {
      if (
        Object.keys(state.cyberdeckDataMaster.attributes).indexOf(name) > -1
      ) {
        const attributes = state.cyberdeckDataMaster.attributes;
        attributes[name] = value;
        return { player: attributes };
      } else if (
        Object.keys(state.cyberdeckDataMaster.skills).indexOf(name) > -1
      ) {
        const skills = state.cyberdeckDataMaster.skills;
        skills[name] = value;
        return { player: skills };
      }
    });
  }

  // onHandleConfigSkills(skillName, value) {
  //   this.setState((state) => {
  //     let skills = state.cyberdeckDataMaster.skills;
  //     skills[skillName] = value;
  //     return { player: skills };
  //   });
  // }

  componentDidMount() {}

  render() {
    const title = 'Shadowrun 5e Decker Edition';
    return (
      <Main className="container-fluid bg-dark">
        <HeaderStyle>
          <Header />
        </HeaderStyle>
        <Title className="jumbotron">{title}</Title>
        <Switch>
          <Route exact path="/" />
          <Route
            exact
            path="/cyberdeck"
            render={() => (
              <div>
                <Stats
                  cyberdeckData={this.state.cyberdeckDataMaster}
                  handleConfigStats={this.onHandleConfigStats}
                  // handleConfigSkills={this.onHandleConfigSkills}
                />
                <br />
                <MatrixActions
                  cyberdeckData={this.state.cyberdeckDataMaster}
                  matrixActions={this.state.matrixActions}
                />
              </div>
            )}
          />
          <Route component={Error404} />
        </Switch>
        <Footer />
      </Main>
    );
  }
}

/*
App.propTypes = {
  //  [variable-name]: PropTypes.[type],
};
*/

export default App;

const Main = styled.div`
  font-family: Open Sans;
`;

const Title = styled.h1`
  text-align: center;
  font-weight: 800;
`;

const HeaderStyle = styled.div`
  font-size: 1.5em;
  text-align: center;
`;
