// Autogenerated using npm run gen Character
import styled from 'styled-components';
import { connect } from 'react-redux';
import { load } from '../data/actions.js';
const FileSaver = require('file-saver');

// import PropTypes from 'prop-types';
// import { Link, Switch, Route } from 'react-router-dom';

class Character extends React.Component {
  constructor(props) {
    super(props);
  }

  writeState = () => {
    console.log('write');
    var blob = new Blob([JSON.stringify(this.props.state, null, 2)], {
      type: 'application/json',
    });
    FileSaver.saveAs(blob, 'character.json');
  };

  handleFileSelect = (event) => {
    var file = event.target.file; // FileList object
    console.log(file);
    var reader = new FileReader();

    reader.onload = function(event) {
      // the_url = event.target.result;
    };

    // when the file is read it triggers the onload event above.
    reader.readAsDataURL(file);
  };

  render() {
    return (
      <Main>
        <button onClick={() => this.writeState()}>Save Character</button>
        <div>
          <label htmlFor="file">Load Character: </label>
          <input
            onChange={(e) => this.handleFileSelect(e)}
            type="file"
            id="file"
            name="file"
            accept=".json"
          />
        </div>
      </Main>
    );
  }
}

Character.propTypes = {
  state: PropTypes.object,
};

// eslint-disable-next-line react-redux/mapStateToProps-no-store
function mapStateToProps(state) {
  return {
    state,
  };
}

const mapDispatchToProps = {
  load,
};

export default connect(
  mapStateToProps,
  mapDispatchToProps
)(Character);

const Main = styled.div`
  background-color: white;
  font-family: Courier New;
  color: black;
  font-weight: normal;
`;
