// Autogenerated using npm run gen Character
import styled from 'styled-components';
import { connect } from 'react-redux';
import { load, setCharacterName } from '../data/actions.js';
const FileSaver = require('file-saver');

// import PropTypes from 'prop-types';
// import { Link, Switch, Route } from 'react-router-dom';

class Character extends React.Component {
  constructor(props) {
    super(props);
  }

  handleFileName = (event) => {
    const name = event.target.value;
    console.log(name);
    this.props.setCharacterName(name);
  };

  writeState = () => {
    var blob = new Blob([JSON.stringify(this.props.state, null, 2)], {
      type: 'application/json',
    });
    FileSaver.saveAs(blob, this.props.state.characterName);
  };

  handleFileSelect = (event) => {
    const file = event.target.files[0]; // FileList object
    const reader = new FileReader();
    reader.onload = (event) => {
      //Parse the file to a JSON object
      this.props.load(JSON.parse(event.target.result));
    };

    reader.readAsText(file);
  };

  render() {
    return (
      <Main>
        <div>
          <button onClick={() => this.writeState()}>Save Character</button>
          <span> </span>
          <input
            onChange={(e) => this.handleFileName(e)}
            type="text"
            id="file-name"
            name="file-name"
            value={this.props.state.characterName}
          />
          <span>.json</span>
        </div>
        <div>
          <label htmlFor="file">Load Character: </label>
          <input
            onChange={(e) => this.handleFileSelect(e)}
            type="file"
            id="file"
            name="file"
            accept=".json"
          />
        </div>
      </Main>
    );
  }
}

Character.propTypes = {
  state: PropTypes.object,
  load: PropTypes.func,
  setCharacterName: PropTypes.func,
};

// eslint-disable-next-line react-redux/mapStateToProps-no-store
function mapStateToProps(state) {
  return {
    state,
  };
}

const mapDispatchToProps = {
  load,
  setCharacterName,
};

export default connect(
  mapStateToProps,
  mapDispatchToProps
)(Character);

const Main = styled.div`
  background-color: white;
  font-family: Courier New;
  color: black;
  font-weight: normal;
`;
