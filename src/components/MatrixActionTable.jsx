// Autogenerated using npm run gen MatrixActionTable
import ReactTable from 'react-table';
import 'react-table/react-table.css';
import styled from 'styled-components';
import PropTypes from 'prop-types';
// import { Link, Switch, Route } from 'react-router-dom';

function MatrixActionTable(props) {
  const columns = [
    {
      Header: 'Matrix Action',
      accessor: 'name',
      width: '200',
      style: { width: 'auto', height: 'auto', whiteSpace: 'normal' },
      filterMethod: (filter, rows) => {
        const searchFor = filter.value.toLowerCase();
        const name = rows.name.toLowerCase();
        return name.indexOf(searchFor) !== -1;
      },
    },
    {
      Header: 'Action Type',
      accessor: 'actionType',
      width: '200',
      style: { width: 'auto', height: 'auto', whiteSpace: 'normal' },
      filterMethod: (filter, rows) => {
        const searchFor = filter.value.toLowerCase();
        const actionType = rows.actionType.toLowerCase();
        return actionType.indexOf(searchFor) !== -1;
      },
    },
    {
      Header: 'Limit',
      accessor: 'limit',
      width: '200',
      style: { width: 'auto', height: 'auto', whiteSpace: 'normal' },
      filterMethod: (filter, rows) => {
        const searchFor = filter.value.toLowerCase();
        const limit = rows.limit.toLowerCase();
        return limit.indexOf(searchFor) !== -1;
      },
    },
    {
      Header: 'Values',
      accessor: 'combatValues',
      width: '300',
      style: { width: 'auto', height: 'auto', whiteSpace: 'pre-line' },
    },
    {
      Header: 'Combat Rolls',
      accessor: 'combatRolls',
      width: '300',
      style: { width: 'auto', height: 'auto', whiteSpace: 'pre-line' },
    },
    {
      Header: 'Marks',
      accessor: 'marks',
      width: '115',
      style: { width: 'auto', height: 'auto', whiteSpace: 'normal' },
    },
    {
      Header: 'Description',
      accessor: 'desc',
      width: '700',
      style: { width: '200', height: 'auto', whiteSpace: 'normal' },
    },
    {
      Header: 'Source',
      accessor: 'source',
      width: '100',
      style: {
        width: 'auto',
        height: 'auto',
        whiteSpace: 'normal',
        textAlign: 'center',
      },
      filterMethod: (filter, rows) => {
        const searchFor = filter.value.toLowerCase();
        const limit = rows.source.toLowerCase();
        return limit.indexOf(searchFor) !== -1;
      },
    },
  ];

  return (
    <Main className="">
      <ReactTable
        className="table table-sm bg-info -striped -highlight"
        data={props.actions}
        columns={columns}
        resizable={true}
        filterable={true}
        minRows={0}
        defaultPageSize={100}
        showPagination={false}
        style={{
          width: 'auto',
          minWidth: '20',
          height: 'auto',
          wordWrap: 'normal',
        }}
      />
    </Main>
  );
}

MatrixActionTable.propTypes = {
  actions: PropTypes.array,
};

export default MatrixActionTable;

const Main = styled.div`
  font-family: Open Sans;
  font-size: 1em;
`;
