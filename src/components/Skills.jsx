// Autogenerated using npm run gen Skills
import ReactTable from 'react-table';
import 'react-table/react-table.css';
import styled from 'styled-components';
import PropTypes from 'prop-types';
import { connect } from 'react-redux';
import { setSkill } from '../data/actions.js';
// import PropTypes from 'prop-types';

function Skills(props) {
  const skillsTable = [];

  const handleStatChange = (event) => {
    const text = event.target.name;
    const newValue = parseInt(event.target.value);
    props.setSkill(text, newValue);
  };

  Object.keys(props.skills).forEach((skill) => {
    skillsTable.push({
      name: skill,
      ranks: (
        <label key={props.skills[skill].ranks}>
          <Input
            key={1}
            name={skill}
            type="number"
            onChange={(event) => handleStatChange(event)}
            value={props.skills[skill].ranks}
          />
        </label>
      ),
    });
  });

  const columns = [
    {
      Header: 'Name',
      accessor: 'name',
      style: { width: 'auto', height: 'auto', whiteSpace: 'normal' },
      filterMethod: (filter, rows) => {
        const searchFor = filter.value.toLowerCase();
        const name = rows.name.toLowerCase();
        return name.indexOf(searchFor) !== -1;
      },
    },
    {
      Header: 'Ranks',
      accessor: 'ranks',
      style: { width: 'auto', height: 'auto', whiteSpace: 'normal' },
      filterMethod: (filter, rows) => {
        const searchFor = filter.value;
        const ranks = rows.modify.key;
        return searchFor === ranks;
      },
    },
  ];

  return (
    <Main className="">
      <ReactTable
        className="table table-sm bg-info -striped -highlight"
        data={skillsTable}
        columns={columns}
        resizable={false}
        filterable={true}
        minRows={0}
        defaultPageSize={100}
        showPagination={false}
        style={{
          width: 'auto',
          height: 'auto',
          wordWrap: 'normal',
        }}
      />
    </Main>
  );
}

Skills.propTypes = {
  skills: PropTypes.object,
  setSkill: PropTypes.func,
};

function mapStateToProps(state) {
  return {
    skills: state.skills,
  };
}

const mapDispatchToProps = { setSkill };

export default connect(
  mapStateToProps,
  mapDispatchToProps
)(Skills);

const Main = styled.div`
  background-color: white;
  font-family: Courier New;
  color: black;
  font-weight: normal;
  text-transform: capitalize;
`;

const Input = styled.input`
  font-family: Open Sans;
  color: black;
  font-size: 1em;
  width: 100px;
  text-align: center;
`;
