// Autogenerated using npm run gen Program
/*
 * Copy to other files
 * import Program from './Program';
 * <Program/>
 */
import styled from 'styled-components';
import PropTypes from 'prop-types';

class Program extends React.Component {
  constructor(props) {
    super(props);

    this.state = { count: 0 };
    this.handleButtonClick = this.handleButtonClick.bind(this);
    this.handleButtonOver = this.handleButtonOver.bind(this);
    this.handleButtonOut = this.handleButtonOut.bind(this);
    this.handleAddCountValue = this.handleAddCountValue.bind(this);
    this.handleUpdateStat = this.handleUpdateStat.bind(this);
  }

  handleAddCountValue(value) {
    this.setState((state) => {
      state.count += value;
    });
  }

  handleUpdateStat(name, increment, max) {
    const value = this.state.count >= max ? -max : increment;
    this.handleAddCountValue(value);
    this.props.onHandleConfigStats(
      name,
      this.props.cyberdeckData.attributes[name] + value
    );
  }

  handleButtonClick() {
    switch (this.props.name) {
      case 'Decryption':
        this.handleUpdateStat('attack', 1, 1);
        break;
      case 'Encryption':
        this.handleUpdateStat('firewall', 1, 1);
        break;
      case 'Smoke & Mirrors':
        this.handleUpdateStat('sleaze', 1, 5);
        break;
      default:
    }
  }

  handleButtonOver() {
    this.props.onHandleButtonHover(this.props.description);
  }

  handleButtonOut() {
    this.props.onHandleButtonHover('');
  }

  render() {
    const currentClass =
      this.state.count <= 0 ? 'btn btn-light' : 'btn btn-success';
    return (
      <Main classname="">
        <div>
          <button
            className={currentClass}
            onClick={this.handleButtonClick}
            onMouseOver={this.handleButtonOver}
            onMouseOut={this.handleButtonOut}>
            {this.props.name}
          </button>
        </div>
      </Main>
    );
  }
}

Program.propTypes = {
  onHandleProgramChange: PropTypes.func,
  onHandleConfigStats: PropTypes.func,
  onHandleButtonHover: PropTypes.func,
  name: PropTypes.string,
  description: PropTypes.string,
  cyberdeckData: PropTypes.object,
};

export default Program;

const Main = styled.div`
  font-family: Open Sans;
  font-weight: normal;
  margin: 3px;
`;
