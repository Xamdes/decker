// Autogenerated using npm run gen cyberdeck
/*
 * Copy to other files
 * import cyberdeck from './cyberdeck';
 * <cyberdeck/>
 */
import styled from 'styled-components';
// import PropTypes from 'prop-types';
// import { Link, Switch, Route } from 'react-router-dom';

class Cyberdeck extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      attributes: props.cyberdeckData.attributes,
      skills: props.cyberdeckData.skills,
    };
    this.handleSkillsChange = this.handleSkillsChange.bind(this);
    this.handleAttributesChange = this.handleAttributesChange.bind(this);
  }

  //Skills
  handleSkillsChange(event) {
    const name = event.target.getAttribute('name');
    const newValue = parseInt(event.target.value);
    this.props.handleConfigSkills(name, newValue);
  }

  //Attributes
  handleAttributesChange(event) {
    const name = event.target.getAttribute('name');
    const newValue = parseInt(event.target.value);
    this.props.handleConfigAttributes(name, newValue);
  }

  render() {
    // console.log(this.props.cyberdeckData);
    return (
      <Main className="container-fluid">
        <div className="d-flex justify-content-center">
          <div className="card">
            <div className="card-body">
              <h5 className="card-title">Attack</h5>
              <div className="card-text input-group input-group-sm mb-3">
                <input
                  name="attack"
                  type="number"
                  value={this.state.attributes.attack}
                  onChange={this.handleAttributesChange}
                />
              </div>
            </div>
          </div>
          <div className="card">
            <div className="card-body">
              <h5 className="card-title">Sleaze</h5>
              <div className="card-text input-group input-group-sm mb-3">
                <input
                  name="sleaze"
                  type="number"
                  value={this.state.attributes.sleaze}
                  onChange={this.handleAttributesChange}
                />
              </div>
            </div>
          </div>
          <div className="card">
            <div className="card-body">
              <h5 className="card-title">Data Processing</h5>
              <div className="card-text input-group input-group-sm mb-3">
                <input
                  name="dataProcessing"
                  type="number"
                  value={this.state.attributes.dataProcessing}
                  onChange={this.handleAttributesChange}
                />
              </div>
            </div>
          </div>
          <div className="card">
            <div className="card-body">
              <h5 className="card-title">Firewall</h5>
              <div className="card-text input-group input-group-sm mb-3">
                <input
                  name="firewall"
                  type="number"
                  value={this.state.attributes.firewall}
                  onChange={this.handleAttributesChange}
                />
              </div>
            </div>
          </div>
        </div>
        <div className="d-flex justify-content-center">
          <div className="card">
            <div className="card-body">
              <h5 className="card-title">Logic</h5>
              <div className="card-text input-group input-group-sm mb-3">
                <input
                  name="logic"
                  type="number"
                  value={this.state.attributes.logic}
                  onChange={this.handleAttributesChange}
                />
              </div>
            </div>
          </div>
          <div className="card">
            <div className="card-body">
              <h5 className="card-title">Intuition</h5>
              <div className="card-text input-group input-group-sm mb-3">
                <input
                  name="intuition"
                  type="number"
                  value={this.state.attributes.intuition}
                  onChange={this.handleAttributesChange}
                />
              </div>
            </div>
          </div>
          <div className="card">
            <div className="card-body">
              <h5 className="card-title">Willpower</h5>
              <div className="card-text input-group input-group-sm mb-3">
                <input
                  name="willpower"
                  type="number"
                  value={this.state.attributes.willpower}
                  onChange={this.handleAttributesChange}
                />
              </div>
            </div>
          </div>
          <div className="card">
            <div className="card-body">
              <h5 className="card-title">Reaction</h5>
              <div className="card-text input-group input-group-sm mb-3">
                <input
                  name="reaction"
                  type="number"
                  value={this.state.attributes.reaction}
                  onChange={this.handleAttributesChange}
                />
              </div>
            </div>
          </div>
        </div>
        <div className="d-flex justify-content-center">
          <div className="card">
            <div className="card-body">
              <h5 className="card-title">Computer</h5>
              <div className="card-text input-group input-group-sm mb-3">
                <input
                  name="computer"
                  type="number"
                  value={this.state.skills.computer}
                  onChange={this.handleSkillsChange}
                />
              </div>
            </div>
          </div>
          <div className="card">
            <div className="card-body">
              <h5 className="card-title">Cybercombat</h5>
              <div className="card-text input-group input-group-sm mb-3">
                <input
                  name="cybercombat"
                  type="number"
                  value={this.state.skills.cybercombat}
                  onChange={this.handleSkillsChange}
                />
              </div>
            </div>
          </div>
          <div className="card">
            <div className="card-body">
              <h5 className="card-title">Electronic Warfare</h5>
              <div className="card-text input-group input-group-sm mb-3">
                <input
                  name="electronicWarfare"
                  type="number"
                  value={this.state.skills.electronicWarfare}
                  onChange={this.handleSkillsChange}
                />
              </div>
            </div>
          </div>
          <div className="card">
            <div className="card-body">
              <h5 className="card-title">Hacking</h5>
              <div className="card-text input-group input-group-sm mb-3">
                <input
                  name="hacking"
                  type="number"
                  value={this.state.skills.hacking}
                  onChange={this.handleSkillsChange}
                />
              </div>
            </div>
          </div>
          <div className="card">
            <div className="card-body">
              <h5 className="card-title">Hardware</h5>
              <div className="card-text input-group input-group-sm mb-3">
                <input
                  name="hardware"
                  type="number"
                  value={this.state.skills.hardware}
                  onChange={this.handleSkillsChange}
                />
              </div>
            </div>
          </div>
          <div className="card">
            <div className="card-body">
              <h5 className="card-title">Software</h5>
              <div className="card-text input-group input-group-sm mb-3">
                <input
                  name="software"
                  type="number"
                  value={this.state.skills.software}
                  onChange={this.handleSkillsChange}
                />
              </div>
            </div>
          </div>
        </div>
      </Main>
    );
  }
}

Cyberdeck.propTypes = {
  cyberdeckData: PropTypes.object,
  handleConfigSkills: PropTypes.func,
  handleConfigAttributes: PropTypes.func,
};

export default Cyberdeck;

const Main = styled.div`
  font-family: sans-serif;
  padding-top: 10px;
  color: black;
`;
