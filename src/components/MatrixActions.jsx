import MatrixActionTable from './MatrixActionTable';
import MatrixAction from './MatrixAction';
// Autogenerated using npm run gen MatrixActions
/*
 * Copy to other files
 * import MatrixActions from './MatrixActions';
 * <MatrixActions/>
 */
import styled from 'styled-components';
// import PropTypes from 'prop-types';
// import { Link, Switch, Route } from 'react-router-dom';

function MatrixActions(props) {
  const deck = props.cyberdeckData;
  const values = {
    Attack: deck.attributes.attack,
    Sleaze: deck.attributes.sleaze,
    'Data Processing': deck.attributes.dataProcessing,
    Firewall: deck.attributes.firewall,
    Logic: deck.attributes.logic,
    Intuition: deck.attributes.intuition,
    Willpower: deck.attributes.willpower,
    Reaction: deck.attributes.reaction,
    Computer: deck.skills.computer,
    Cybercombat: deck.skills.cybercombat,
    'Electronic Warfare': deck.skills.electronicWarfare,
    Hacking: deck.skills.hacking,
    Hardware: deck.skills.hardware,
    Software: deck.skills.software,
    runningSilent: deck.runningSilent,
    grid: deck.grid,
    mode: deck.mode,
  };

  const actionsSorted = props.matrixActions.actions.sort((a, b) => {
    const itemOneName = a.name.toLowerCase();
    const itemOneLimit = a.limit.offense.toLowerCase();
    const itemTwoName = b.name.toLowerCase();
    const itemTwoLimit = b.limit.offense.toLowerCase();
    if (itemOneLimit > itemTwoLimit) return 1;
    if (itemOneLimit < itemTwoLimit) return -1;
    if (itemOneName > itemTwoName) return 1;
    if (itemOneName < itemTwoName) return -1;

    // return b.name.toLowerCase() < a.name.toLowerCase() ? 1 : -1;
  });

  const matrixAction = actionsSorted.map((item, key) => (
    <div className="col-2" key={key}>
      <MatrixAction
        matrixAction={item}
        matrixActionBonus={props.matrixActionBonus}
        values={values}
      />
    </div>
  ));

  return (
    <Main className="container-fluid">
      <h2 className="jumbotron d-flex justify-content-center">
        Matrix Actions
      </h2>

      <MatrixActionTable values={values} actions={actionsSorted} />
      <div className="d-flex flex-wrap">{matrixAction}</div>
    </Main>
  );
}

MatrixActions.propTypes = {
  cyberdeckData: PropTypes.object,
  matrixActions: PropTypes.object,
  matrixActionBonus: PropTypes.number,
};

export default MatrixActions;

const Main = styled.div`
  font-family: sans-serif;
  padding-top: 20px;
  color: black;
`;
